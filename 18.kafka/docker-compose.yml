version: '3'
services:
  zookeeper:
    image: zookeeper
    ports:
      - 1800:2181
    restart: always
  
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "1801:9092"
    environment:
      KAFKA_BROKER_ID: 0 # borkerID
      KAFKA_NUM_PARTITIONS: 3 # topic的分区数
      # KAFKA_DEFAULT_REPLICATION_FACTOR: 2 # 分区的副本数
      KAFKA_ZOOKEEPER_CONNECT: 81.68.190.56:1800 # zookeeper地址
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 # 容器内访问的地址
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://81.68.190.56:1801 # 容器外访问的地址
    volumes:
      - ./borker/logs:/opt/kafka/logs
      - ./run/docker.sock:/var/run/docker.sock
    restart: always
 
  # kafka2:
  #   image: wurstmeister/kafka
  #   container_name: kafka2
  #   ports:
  #     - "9094:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_NUM_PARTITIONS: 3
  #     KAFKA_DEFAULT_REPLICATION_FACTOR: 2
  #     KAFKA_ZOOKEEPER_CONNECT: 10.68.4.1:2182
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.68.4.1:9094
  #   volumes:
  #     - /data/docker-compose/kafka/broker2/logs:/opt/kafka/logs
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   restart: always
  
  # kafka3:
  #   image: wurstmeister/kafka
  #   container_name: kafka3
  #   ports:
  #     - "9095:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_NUM_PARTITIONS: 3
  #     KAFKA_DEFAULT_REPLICATION_FACTOR: 2
  #     KAFKA_ZOOKEEPER_CONNECT: 10.68.4.1:2182
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.68.4.1:9095
  #   volumes:
  #     - /data/docker-compose/kafka/broker3/logs:/opt/kafka/logs
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   restart: always